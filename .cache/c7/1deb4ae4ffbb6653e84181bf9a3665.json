{"id":"node_modules/leancloud-storage/dist/node/query.js","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\package.json","includedInParent":true,"mtime":1542805068504},{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\package.json","includedInParent":true,"mtime":1542804871007},{"name":"underscore","loc":{"line":3,"column":16},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\underscore\\underscore.js"},{"name":"debug","loc":{"line":4,"column":20},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\node_modules\\debug\\src\\browser.js"},{"name":"./promise","loc":{"line":5,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\promise.js"},{"name":"./error","loc":{"line":6,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\error.js"},{"name":"./request","loc":{"line":8,"column":23},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\request.js"},{"name":"./utils","loc":{"line":12,"column":24},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\query.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\utils\\index.js"}],"generated":{"js":"'use strict';\n\nvar _ = require('underscore');\nvar debug = require('debug')('leancloud:query');\nvar Promise = require('./promise');\nvar AVError = require('./error');\n\nvar _require = require('./request'),\n    _request = _require._request,\n    request = _require.request;\n\nvar _require2 = require('./utils'),\n    ensureArray = _require2.ensureArray,\n    transformFetchOptions = _require2.transformFetchOptions;\n\nvar requires = function requires(value, message) {\n  if (value === undefined) {\n    throw new Error(message);\n  }\n};\n\n// AV.Query is a way to create a list of AV.Objects.\nmodule.exports = function (AV) {\n  /**\n   * Creates a new AV.Query for the given AV.Object subclass.\n   * @param {Class|String} objectClass An instance of a subclass of AV.Object, or a AV className string.\n   * @class\n   *\n   * <p>AV.Query defines a query that is used to fetch AV.Objects. The\n   * most common use case is finding all objects that match a query through the\n   * <code>find</code> method. For example, this sample code fetches all objects\n   * of class <code>MyClass</code>. It calls a different function depending on\n   * whether the fetch succeeded or not.\n   *\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.find().then(function(results) {\n   *   // results is an array of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   *\n   * <p>An AV.Query can also be used to retrieve a single object whose id is\n   * known, through the get method. For example, this sample code fetches an\n   * object of class <code>MyClass</code> and id <code>myId</code>. It calls a\n   * different function depending on whether the fetch succeeded or not.\n   *\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.get(myId).then(function(object) {\n   *   // object is an instance of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   *\n   * <p>An AV.Query can also be used to count the number of objects that match\n   * the query without retrieving all of those objects. For example, this\n   * sample code counts the number of objects of the class <code>MyClass</code>\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.count().then(function(number) {\n   *   // There are number instances of MyClass.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   */\n  AV.Query = function (objectClass) {\n    if (_.isString(objectClass)) {\n      objectClass = AV.Object._getSubclass(objectClass);\n    }\n\n    this.objectClass = objectClass;\n\n    this.className = objectClass.prototype.className;\n\n    this._where = {};\n    this._include = [];\n    this._select = [];\n    this._limit = -1; // negative limit means, do not send a limit\n    this._skip = 0;\n    this._extraOptions = {};\n  };\n\n  /**\n   * Constructs a AV.Query that is the OR of the passed in queries.  For\n   * example:\n   * <pre>var compoundQuery = AV.Query.or(query1, query2, query3);</pre>\n   *\n   * will create a compoundQuery that is an or of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to OR.\n   * @return {AV.Query} The query that is the OR of the passed in queries.\n   */\n  AV.Query.or = function () {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function (q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._orQuery(queries);\n    return query;\n  };\n\n  /**\n   * Constructs a AV.Query that is the AND of the passed in queries.  For\n   * example:\n   * <pre>var compoundQuery = AV.Query.and(query1, query2, query3);</pre>\n   *\n   * will create a compoundQuery that is an 'and' of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to AND.\n   * @return {AV.Query} The query that is the AND of the passed in queries.\n   */\n  AV.Query.and = function () {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function (q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._andQuery(queries);\n    return query;\n  };\n\n  /**\n   * Retrieves a list of AVObjects that satisfy the CQL.\n   * CQL syntax please see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   *\n   * @param {String} cql A CQL string, see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   * @param {Array} pvalues An array contains placeholder values.\n   * @param {AuthOptions} options\n   * @return {Promise} A promise that is resolved with the results when\n   * the query completes.\n   */\n  AV.Query.doCloudQuery = function (cql, pvalues, options) {\n    var params = { cql: cql };\n    if (_.isArray(pvalues)) {\n      params.pvalues = pvalues;\n    } else {\n      options = pvalues;\n    }\n\n    var request = _request('cloudQuery', null, null, 'GET', params, options);\n    return request.then(function (response) {\n      //query to process results.\n      var query = new AV.Query(response.className);\n      var results = _.map(response.results, function (json) {\n        var obj = query._newObject(response);\n        if (obj._finishFetch) {\n          obj._finishFetch(query._processResult(json), true);\n        }\n        return obj;\n      });\n      return {\n        results: results,\n        count: response.count,\n        className: response.className\n      };\n    });\n  };\n\n  AV.Query._extend = AV._extend;\n\n  _.extend(AV.Query.prototype,\n  /** @lends AV.Query.prototype */{\n    //hook to iterate result. Added by dennis<xzhuang@avoscloud.com>.\n    _processResult: function _processResult(obj) {\n      return obj;\n    },\n\n    /**\n     * Constructs an AV.Object whose id is already known by fetching data from\n     * the server.\n     *\n     * @param {String} objectId The id of the object to be fetched.\n     * @param {AuthOptions} options\n     * @return {Promise.<AV.Object>}\n     */\n    get: function get(objectId, options) {\n      if (!objectId) {\n        var errorObject = new AVError(AVError.OBJECT_NOT_FOUND, 'Object not found.');\n        throw errorObject;\n      }\n\n      var obj = this._newObject();\n      obj.id = objectId;\n\n      var queryJSON = this.toJSON();\n      var fetchOptions = {};\n\n      if (queryJSON.keys) fetchOptions.keys = queryJSON.keys;\n      if (queryJSON.include) fetchOptions.include = queryJSON.include;\n      if (queryJSON.includeACL) fetchOptions.includeACL = queryJSON.includeACL;\n\n      return _request('classes', this.className, objectId, 'GET', transformFetchOptions(fetchOptions), options).then(function (response) {\n        if (_.isEmpty(response)) throw new AVError(AVError.OBJECT_NOT_FOUND, 'Object not found.');\n        obj._finishFetch(obj.parse(response), true);\n        return obj;\n      });\n    },\n\n    /**\n     * Returns a JSON representation of this query.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var params = {\n        where: this._where\n      };\n\n      if (this._include.length > 0) {\n        params.include = this._include.join(',');\n      }\n      if (this._select.length > 0) {\n        params.keys = this._select.join(',');\n      }\n      if (this._includeACL !== undefined) {\n        params.returnACL = this._includeACL;\n      }\n      if (this._limit >= 0) {\n        params.limit = this._limit;\n      }\n      if (this._skip > 0) {\n        params.skip = this._skip;\n      }\n      if (this._order !== undefined) {\n        params.order = this._order;\n      }\n\n      AV._objectEach(this._extraOptions, function (v, k) {\n        params[k] = v;\n      });\n\n      return params;\n    },\n\n    _newObject: function _newObject(response) {\n      var obj;\n      if (response && response.className) {\n        obj = new AV.Object(response.className);\n      } else {\n        obj = new this.objectClass();\n      }\n      return obj;\n    },\n    _createRequest: function _createRequest() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toJSON();\n      var options = arguments[1];\n      var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/classes/' + this.className;\n\n      if (encodeURIComponent(JSON.stringify(params)).length > 2000) {\n        var body = {\n          requests: [{\n            method: 'GET',\n            path: '/1.1' + path,\n            params: params\n          }]\n        };\n        return request({\n          path: '/batch',\n          method: 'POST',\n          data: body,\n          authOptions: options\n        }).then(function (response) {\n          var result = response[0];\n          if (result.success) {\n            return result.success;\n          }\n          var error = new Error(result.error.error || 'Unknown batch error');\n          error.code = result.error.code;\n          throw error;\n        });\n      }\n      return request({\n        method: 'GET',\n        path: path,\n        query: params,\n        authOptions: options\n      });\n    },\n    _parseResponse: function _parseResponse(response) {\n      var _this = this;\n\n      return _.map(response.results, function (json) {\n        var obj = _this._newObject(response);\n        if (obj._finishFetch) {\n          obj._finishFetch(_this._processResult(json), true);\n        }\n        return obj;\n      });\n    },\n\n\n    /**\n     * Retrieves a list of AVObjects that satisfy this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the results when\n     * the query completes.\n     */\n    find: function find(options) {\n      var request = this._createRequest(undefined, options);\n      return request.then(this._parseResponse.bind(this));\n    },\n\n\n    /**\n     * scan a Query. masterKey required.\n     *\n     * @since 2.1.0\n     * @param {object} [options]\n     * @param {string} [options.orderedBy] specify the key to sort\n     * @param {number} [options.batchSize] specify the batch size for each request\n     * @param {AuthOptions} [authOptions]\n     * @return {AsyncIterator.<AV.Object>}\n     * @example const scan = new AV.Query(TestClass).scan({\n     *   orderedBy: 'objectId',\n     *   batchSize: 10,\n     * }, {\n     *   useMasterKey: true,\n     * });\n     * const getTen = () => Promise.all(new Array(10).fill(0).map(() => scan.next()));\n     * getTen().then(results => {\n     *   // results are fisrt 10 instances of TestClass\n     *   return getTen();\n     * }).then(results => {\n     *   // 11 - 20\n     * });\n     */\n    scan: function scan() {\n      var _this2 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          orderedBy = _ref.orderedBy,\n          batchSize = _ref.batchSize;\n\n      var authOptions = arguments[1];\n\n      var condition = this.toJSON();\n      debug('scan %O', condition);\n      if (condition.order) {\n        console.warn('The order of the query is ignored for Query#scan. Checkout the orderedBy option of Query#scan.');\n        delete condition.order;\n      }\n      if (condition.skip) {\n        console.warn('The skip option of the query is ignored for Query#scan.');\n        delete condition.skip;\n      }\n      if (condition.limit) {\n        console.warn('The limit option of the query is ignored for Query#scan.');\n        delete condition.limit;\n      }\n      if (orderedBy) condition.scan_key = orderedBy;\n      if (batchSize) condition.limit = batchSize;\n      var promise = Promise.resolve([]);\n      var cursor = void 0;\n      var done = false;\n      return {\n        next: function next() {\n          promise = promise.then(function (remainResults) {\n            if (done) return [];\n            if (remainResults.length > 1) return remainResults;\n            // no cursor means we have reached the end\n            // except for the first time\n            if (!cursor && remainResults.length !== 0) {\n              done = true;\n              return remainResults;\n            }\n            // when only 1 item left in queue\n            // start the next request to see if it is the last one\n            return _request('scan/classes', _this2.className, null, 'GET', cursor ? _.extend({}, condition, { cursor: cursor }) : condition, authOptions).then(function (response) {\n              cursor = response.cursor;\n              return _this2._parseResponse(response);\n            }).then(function (results) {\n              if (!results.length) done = true;\n              return remainResults.concat(results);\n            });\n          });\n          return promise.then(function (remainResults) {\n            return remainResults.shift();\n          }).then(function (result) {\n            return {\n              value: result,\n              done: done\n            };\n          });\n        }\n      };\n    },\n\n\n    /**\n     * Delete objects retrieved by this query.\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is fulfilled when the save\n     *     completes.\n     */\n    destroyAll: function destroyAll(options) {\n      var self = this;\n      return self.find(options).then(function (objects) {\n        return AV.Object.destroyAll(objects, options);\n      });\n    },\n\n    /**\n     * Counts the number of objects that match this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the count when\n     * the query completes.\n     */\n    count: function count(options) {\n      var params = this.toJSON();\n      params.limit = 0;\n      params.count = 1;\n      var request = this._createRequest(params, options);\n\n      return request.then(function (response) {\n        return response.count;\n      });\n    },\n\n    /**\n     * Retrieves at most one AV.Object that satisfies this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the object when\n     * the query completes.\n     */\n    first: function first(options) {\n      var self = this;\n\n      var params = this.toJSON();\n      params.limit = 1;\n      var request = this._createRequest(params, options);\n\n      return request.then(function (response) {\n        return _.map(response.results, function (json) {\n          var obj = self._newObject();\n          if (obj._finishFetch) {\n            obj._finishFetch(self._processResult(json), true);\n          }\n          return obj;\n        })[0];\n      });\n    },\n\n    /**\n     * Sets the number of results to skip before returning any results.\n     * This is useful for pagination.\n     * Default is to skip zero results.\n     * @param {Number} n the number of results to skip.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    skip: function skip(n) {\n      requires(n, 'undefined is not a valid skip value');\n      this._skip = n;\n      return this;\n    },\n\n    /**\n     * Sets the limit of the number of results to return. The default limit is\n     * 100, with a maximum of 1000 results being returned at a time.\n     * @param {Number} n the number of results to limit to.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    limit: function limit(n) {\n      requires(n, 'undefined is not a valid limit value');\n      this._limit = n;\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that the AV.Object must contain.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    equalTo: function equalTo(key, value) {\n      requires(key, 'undefined is not a valid key');\n      requires(value, 'undefined is not a valid value');\n      this._where[key] = AV._encode(value);\n      return this;\n    },\n\n    /**\n     * Helper for condition queries\n     * @private\n     */\n    _addCondition: function _addCondition(key, condition, value) {\n      requires(key, 'undefined is not a valid condition key');\n      requires(condition, 'undefined is not a valid condition');\n      requires(value, 'undefined is not a valid condition value');\n\n      // Check if we already have a condition\n      if (!this._where[key]) {\n        this._where[key] = {};\n      }\n      this._where[key][condition] = AV._encode(value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular\n     * <strong>array</strong> key's length to be equal to the provided value.\n     * @param {String} key The array key to check.\n     * @param value The length value.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    sizeEqualTo: function sizeEqualTo(key, value) {\n      this._addCondition(key, '$size', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be not equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that must not be equalled.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    notEqualTo: function notEqualTo(key, value) {\n      this._addCondition(key, '$ne', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be less than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    lessThan: function lessThan(key, value) {\n      this._addCondition(key, '$lt', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be greater than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    greaterThan: function greaterThan(key, value) {\n      this._addCondition(key, '$gt', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be less than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    lessThanOrEqualTo: function lessThanOrEqualTo(key, value) {\n      this._addCondition(key, '$lte', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be greater than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    greaterThanOrEqualTo: function greaterThanOrEqualTo(key, value) {\n      this._addCondition(key, '$gte', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    containedIn: function containedIn(key, values) {\n      this._addCondition(key, '$in', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * not be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will not match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    notContainedIn: function notContainedIn(key, values) {\n      this._addCondition(key, '$nin', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array} values The values that will match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    containsAll: function containsAll(key, values) {\n      this._addCondition(key, '$all', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding objects that contain the given key.\n     * @param {String} key The key that should exist.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    exists: function exists(key) {\n      this._addCondition(key, '$exists', true);\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding objects that do not contain a given key.\n     * @param {String} key The key that should not exist\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotExist: function doesNotExist(key) {\n      this._addCondition(key, '$exists', false);\n      return this;\n    },\n\n    /**\n     * Add a regular expression constraint for finding string values that match\n     * the provided regular expression.\n     * This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {RegExp} regex The regular expression pattern to match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matches: function matches(key, regex, modifiers) {\n      this._addCondition(key, '$regex', regex);\n      if (!modifiers) {\n        modifiers = '';\n      }\n      // Javascript regex options support mig as inline options but store them\n      // as properties of the object. We support mi & should migrate them to\n      // modifiers\n      if (regex.ignoreCase) {\n        modifiers += 'i';\n      }\n      if (regex.multiline) {\n        modifiers += 'm';\n      }\n\n      if (modifiers && modifiers.length) {\n        this._addCondition(key, '$options', modifiers);\n      }\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value matches a AV.Query\n     * constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {AV.Query} query The query that should match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matchesQuery: function matchesQuery(key, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$inQuery', queryJSON);\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value not matches a\n     * AV.Query constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {AV.Query} query The query that should not match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotMatchQuery: function doesNotMatchQuery(key, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$notInQuery', queryJSON);\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value matches a value in\n     * an object returned by a different AV.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     matched.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {AV.Query} query The query to run.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matchesKeyInQuery: function matchesKeyInQuery(key, queryKey, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$select', { key: queryKey, query: queryJSON });\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value not match a value in\n     * an object returned by a different AV.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     excluded.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {AV.Query} query The query to run.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotMatchKeyInQuery: function doesNotMatchKeyInQuery(key, queryKey, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$dontSelect', {\n        key: queryKey,\n        query: queryJSON\n      });\n      return this;\n    },\n\n    /**\n     * Add constraint that at least one of the passed in queries matches.\n     * @param {Array} queries\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     * @private\n     */\n    _orQuery: function _orQuery(queries) {\n      var queryJSON = _.map(queries, function (q) {\n        return q.toJSON().where;\n      });\n\n      this._where.$or = queryJSON;\n      return this;\n    },\n\n    /**\n     * Add constraint that both of the passed in queries matches.\n     * @param {Array} queries\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     * @private\n     */\n    _andQuery: function _andQuery(queries) {\n      var queryJSON = _.map(queries, function (q) {\n        return q.toJSON().where;\n      });\n\n      this._where.$and = queryJSON;\n      return this;\n    },\n\n    /**\n     * Converts a string into a regex that matches it.\n     * Surrounding with \\Q .. \\E does this, we just need to escape \\E's in\n     * the text separately.\n     * @private\n     */\n    _quote: function _quote(s) {\n      return '\\\\Q' + s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q') + '\\\\E';\n    },\n\n    /**\n     * Add a constraint for finding string values that contain a provided\n     * string.  This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} substring The substring that the value must contain.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    contains: function contains(key, value) {\n      this._addCondition(key, '$regex', this._quote(value));\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding string values that start with a provided\n     * string.  This query will use the backend index, so it will be fast even\n     * for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} prefix The substring that the value must start with.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    startsWith: function startsWith(key, value) {\n      this._addCondition(key, '$regex', '^' + this._quote(value));\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding string values that end with a provided\n     * string.  This will be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} suffix The substring that the value must end with.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    endsWith: function endsWith(key, value) {\n      this._addCondition(key, '$regex', this._quote(value) + '$');\n      return this;\n    },\n\n    /**\n     * Sorts the results in ascending order by the given key.\n     *\n     * @param {String} key The key to order by.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    ascending: function ascending(key) {\n      requires(key, 'undefined is not a valid key');\n      this._order = key;\n      return this;\n    },\n\n    /**\n     * Also sorts the results in ascending order by the given key. The previous sort keys have\n     * precedence over this key.\n     *\n     * @param {String} key The key to order by\n     * @return {AV.Query} Returns the query so you can chain this call.\n     */\n    addAscending: function addAscending(key) {\n      requires(key, 'undefined is not a valid key');\n      if (this._order) this._order += ',' + key;else this._order = key;\n      return this;\n    },\n\n    /**\n     * Sorts the results in descending order by the given key.\n     *\n     * @param {String} key The key to order by.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    descending: function descending(key) {\n      requires(key, 'undefined is not a valid key');\n      this._order = '-' + key;\n      return this;\n    },\n\n    /**\n     * Also sorts the results in descending order by the given key. The previous sort keys have\n     * precedence over this key.\n     *\n     * @param {String} key The key to order by\n     * @return {AV.Query} Returns the query so you can chain this call.\n     */\n    addDescending: function addDescending(key) {\n      requires(key, 'undefined is not a valid key');\n      if (this._order) this._order += ',-' + key;else this._order = '-' + key;\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    near: function near(key, point) {\n      if (!(point instanceof AV.GeoPoint)) {\n        // Try to cast it to a GeoPoint, so that near(\"loc\", [20,30]) works.\n        point = new AV.GeoPoint(point);\n      }\n      this._addCondition(key, '$nearSphere', point);\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param maxDistance Maximum distance (in radians) of results to return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinRadians: function withinRadians(key, point, distance) {\n      this.near(key, point);\n      this._addCondition(key, '$maxDistance', distance);\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 3958.8 miles.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\n     *     return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinMiles: function withinMiles(key, point, distance) {\n      return this.withinRadians(key, point, distance / 3958.8);\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 6371.0 kilometers.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\n     *     to return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinKilometers: function withinKilometers(key, point, distance) {\n      return this.withinRadians(key, point, distance / 6371.0);\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's\n     * coordinates be contained within a given rectangular geographic bounding\n     * box.\n     * @param {String} key The key to be constrained.\n     * @param {AV.GeoPoint} southwest\n     *     The lower-left inclusive corner of the box.\n     * @param {AV.GeoPoint} northeast\n     *     The upper-right inclusive corner of the box.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinGeoBox: function withinGeoBox(key, southwest, northeast) {\n      if (!(southwest instanceof AV.GeoPoint)) {\n        southwest = new AV.GeoPoint(southwest);\n      }\n      if (!(northeast instanceof AV.GeoPoint)) {\n        northeast = new AV.GeoPoint(northeast);\n      }\n      this._addCondition(key, '$within', { $box: [southwest, northeast] });\n      return this;\n    },\n\n    /**\n     * Include nested AV.Objects for the provided key.  You can use dot\n     * notation to specify which fields in the included object are also fetch.\n     * @param {String[]} keys The name of the key to include.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    include: function include(keys) {\n      var _this3 = this;\n\n      requires(keys, 'undefined is not a valid key');\n      _(arguments).forEach(function (keys) {\n        _this3._include = _this3._include.concat(ensureArray(keys));\n      });\n      return this;\n    },\n\n    /**\n     * Include the ACL.\n     * @param {Boolean} [value=true] Whether to include the ACL\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    includeACL: function includeACL() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._includeACL = value;\n      return this;\n    },\n\n    /**\n     * Restrict the fields of the returned AV.Objects to include only the\n     * provided keys.  If this is called multiple times, then all of the keys\n     * specified in each of the calls will be included.\n     * @param {String[]} keys The names of the keys to include.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    select: function select(keys) {\n      var _this4 = this;\n\n      requires(keys, 'undefined is not a valid key');\n      _(arguments).forEach(function (keys) {\n        _this4._select = _this4._select.concat(ensureArray(keys));\n      });\n      return this;\n    },\n\n    /**\n     * Iterates over each result of a query, calling a callback for each one. If\n     * the callback returns a promise, the iteration will not continue until\n     * that promise has been fulfilled. If the callback returns a rejected\n     * promise, then iteration will stop with that error. The items are\n     * processed in an unspecified order. The query may not have any sort order,\n     * and may not use limit or skip.\n     * @param callback {Function} Callback that will be called with each result\n     *     of the query.\n     * @return {Promise} A promise that will be fulfilled once the\n     *     iteration has completed.\n     */\n    each: function each(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this._order || this._skip || this._limit >= 0) {\n        var error = new Error('Cannot iterate on a query with sort, skip, or limit.');\n        return Promise.reject(error);\n      }\n\n      var query = new AV.Query(this.objectClass);\n      // We can override the batch size from the options.\n      // This is undocumented, but useful for testing.\n      query._limit = options.batchSize || 100;\n      query._where = _.clone(this._where);\n      query._include = _.clone(this._include);\n\n      query.ascending('objectId');\n\n      var finished = false;\n      return Promise._continueWhile(function () {\n        return !finished;\n      }, function () {\n        return query.find(options).then(function (results) {\n          var callbacksDone = Promise.resolve();\n          _.each(results, function (result) {\n            callbacksDone = callbacksDone.then(function () {\n              return callback(result);\n            });\n          });\n\n          return callbacksDone.then(function () {\n            if (results.length >= query._limit) {\n              query.greaterThan('objectId', results[results.length - 1].id);\n            } else {\n              finished = true;\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Subscribe the changes of this query.\n     *\n     * LiveQuery is not included in the default bundle: {@link https://url.leanapp.cn/enable-live-query}.\n     *\n     * @since 3.0.0\n     * @return {AV.LiveQuery} An eventemitter which can be used to get LiveQuery updates;\n     */\n    subscribe: function subscribe(options) {\n      return AV.LiveQuery.init(this, options);\n    }\n  });\n\n  AV.FriendShipQuery = AV.Query._extend({\n    _objectClass: AV.User,\n    _newObject: function _newObject() {\n      return new AV.User();\n    },\n    _processResult: function _processResult(json) {\n      if (json && json[this._friendshipTag]) {\n        var user = json[this._friendshipTag];\n        if (user.__type === 'Pointer' && user.className === '_User') {\n          delete user.__type;\n          delete user.className;\n        }\n        return user;\n      } else {\n        return null;\n      }\n    }\n  });\n};","map":{"mappings":[{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/query.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}}],"sources":{"node_modules/leancloud-storage/dist/node/query.js":"'use strict';\n\nvar _ = require('underscore');\nvar debug = require('debug')('leancloud:query');\nvar Promise = require('./promise');\nvar AVError = require('./error');\n\nvar _require = require('./request'),\n    _request = _require._request,\n    request = _require.request;\n\nvar _require2 = require('./utils'),\n    ensureArray = _require2.ensureArray,\n    transformFetchOptions = _require2.transformFetchOptions;\n\nvar requires = function requires(value, message) {\n  if (value === undefined) {\n    throw new Error(message);\n  }\n};\n\n// AV.Query is a way to create a list of AV.Objects.\nmodule.exports = function (AV) {\n  /**\n   * Creates a new AV.Query for the given AV.Object subclass.\n   * @param {Class|String} objectClass An instance of a subclass of AV.Object, or a AV className string.\n   * @class\n   *\n   * <p>AV.Query defines a query that is used to fetch AV.Objects. The\n   * most common use case is finding all objects that match a query through the\n   * <code>find</code> method. For example, this sample code fetches all objects\n   * of class <code>MyClass</code>. It calls a different function depending on\n   * whether the fetch succeeded or not.\n   *\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.find().then(function(results) {\n   *   // results is an array of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   *\n   * <p>An AV.Query can also be used to retrieve a single object whose id is\n   * known, through the get method. For example, this sample code fetches an\n   * object of class <code>MyClass</code> and id <code>myId</code>. It calls a\n   * different function depending on whether the fetch succeeded or not.\n   *\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.get(myId).then(function(object) {\n   *   // object is an instance of AV.Object.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   *\n   * <p>An AV.Query can also be used to count the number of objects that match\n   * the query without retrieving all of those objects. For example, this\n   * sample code counts the number of objects of the class <code>MyClass</code>\n   * <pre>\n   * var query = new AV.Query(MyClass);\n   * query.count().then(function(number) {\n   *   // There are number instances of MyClass.\n   * }, function(error) {\n   *   // error is an instance of AVError.\n   * });</pre></p>\n   */\n  AV.Query = function (objectClass) {\n    if (_.isString(objectClass)) {\n      objectClass = AV.Object._getSubclass(objectClass);\n    }\n\n    this.objectClass = objectClass;\n\n    this.className = objectClass.prototype.className;\n\n    this._where = {};\n    this._include = [];\n    this._select = [];\n    this._limit = -1; // negative limit means, do not send a limit\n    this._skip = 0;\n    this._extraOptions = {};\n  };\n\n  /**\n   * Constructs a AV.Query that is the OR of the passed in queries.  For\n   * example:\n   * <pre>var compoundQuery = AV.Query.or(query1, query2, query3);</pre>\n   *\n   * will create a compoundQuery that is an or of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to OR.\n   * @return {AV.Query} The query that is the OR of the passed in queries.\n   */\n  AV.Query.or = function () {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function (q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._orQuery(queries);\n    return query;\n  };\n\n  /**\n   * Constructs a AV.Query that is the AND of the passed in queries.  For\n   * example:\n   * <pre>var compoundQuery = AV.Query.and(query1, query2, query3);</pre>\n   *\n   * will create a compoundQuery that is an 'and' of the query1, query2, and\n   * query3.\n   * @param {...AV.Query} var_args The list of queries to AND.\n   * @return {AV.Query} The query that is the AND of the passed in queries.\n   */\n  AV.Query.and = function () {\n    var queries = _.toArray(arguments);\n    var className = null;\n    AV._arrayEach(queries, function (q) {\n      if (_.isNull(className)) {\n        className = q.className;\n      }\n\n      if (className !== q.className) {\n        throw new Error('All queries must be for the same class');\n      }\n    });\n    var query = new AV.Query(className);\n    query._andQuery(queries);\n    return query;\n  };\n\n  /**\n   * Retrieves a list of AVObjects that satisfy the CQL.\n   * CQL syntax please see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   *\n   * @param {String} cql A CQL string, see {@link https://leancloud.cn/docs/cql_guide.html CQL Guide}.\n   * @param {Array} pvalues An array contains placeholder values.\n   * @param {AuthOptions} options\n   * @return {Promise} A promise that is resolved with the results when\n   * the query completes.\n   */\n  AV.Query.doCloudQuery = function (cql, pvalues, options) {\n    var params = { cql: cql };\n    if (_.isArray(pvalues)) {\n      params.pvalues = pvalues;\n    } else {\n      options = pvalues;\n    }\n\n    var request = _request('cloudQuery', null, null, 'GET', params, options);\n    return request.then(function (response) {\n      //query to process results.\n      var query = new AV.Query(response.className);\n      var results = _.map(response.results, function (json) {\n        var obj = query._newObject(response);\n        if (obj._finishFetch) {\n          obj._finishFetch(query._processResult(json), true);\n        }\n        return obj;\n      });\n      return {\n        results: results,\n        count: response.count,\n        className: response.className\n      };\n    });\n  };\n\n  AV.Query._extend = AV._extend;\n\n  _.extend(AV.Query.prototype,\n  /** @lends AV.Query.prototype */{\n    //hook to iterate result. Added by dennis<xzhuang@avoscloud.com>.\n    _processResult: function _processResult(obj) {\n      return obj;\n    },\n\n    /**\n     * Constructs an AV.Object whose id is already known by fetching data from\n     * the server.\n     *\n     * @param {String} objectId The id of the object to be fetched.\n     * @param {AuthOptions} options\n     * @return {Promise.<AV.Object>}\n     */\n    get: function get(objectId, options) {\n      if (!objectId) {\n        var errorObject = new AVError(AVError.OBJECT_NOT_FOUND, 'Object not found.');\n        throw errorObject;\n      }\n\n      var obj = this._newObject();\n      obj.id = objectId;\n\n      var queryJSON = this.toJSON();\n      var fetchOptions = {};\n\n      if (queryJSON.keys) fetchOptions.keys = queryJSON.keys;\n      if (queryJSON.include) fetchOptions.include = queryJSON.include;\n      if (queryJSON.includeACL) fetchOptions.includeACL = queryJSON.includeACL;\n\n      return _request('classes', this.className, objectId, 'GET', transformFetchOptions(fetchOptions), options).then(function (response) {\n        if (_.isEmpty(response)) throw new AVError(AVError.OBJECT_NOT_FOUND, 'Object not found.');\n        obj._finishFetch(obj.parse(response), true);\n        return obj;\n      });\n    },\n\n    /**\n     * Returns a JSON representation of this query.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var params = {\n        where: this._where\n      };\n\n      if (this._include.length > 0) {\n        params.include = this._include.join(',');\n      }\n      if (this._select.length > 0) {\n        params.keys = this._select.join(',');\n      }\n      if (this._includeACL !== undefined) {\n        params.returnACL = this._includeACL;\n      }\n      if (this._limit >= 0) {\n        params.limit = this._limit;\n      }\n      if (this._skip > 0) {\n        params.skip = this._skip;\n      }\n      if (this._order !== undefined) {\n        params.order = this._order;\n      }\n\n      AV._objectEach(this._extraOptions, function (v, k) {\n        params[k] = v;\n      });\n\n      return params;\n    },\n\n    _newObject: function _newObject(response) {\n      var obj;\n      if (response && response.className) {\n        obj = new AV.Object(response.className);\n      } else {\n        obj = new this.objectClass();\n      }\n      return obj;\n    },\n    _createRequest: function _createRequest() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toJSON();\n      var options = arguments[1];\n      var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/classes/' + this.className;\n\n      if (encodeURIComponent(JSON.stringify(params)).length > 2000) {\n        var body = {\n          requests: [{\n            method: 'GET',\n            path: '/1.1' + path,\n            params: params\n          }]\n        };\n        return request({\n          path: '/batch',\n          method: 'POST',\n          data: body,\n          authOptions: options\n        }).then(function (response) {\n          var result = response[0];\n          if (result.success) {\n            return result.success;\n          }\n          var error = new Error(result.error.error || 'Unknown batch error');\n          error.code = result.error.code;\n          throw error;\n        });\n      }\n      return request({\n        method: 'GET',\n        path: path,\n        query: params,\n        authOptions: options\n      });\n    },\n    _parseResponse: function _parseResponse(response) {\n      var _this = this;\n\n      return _.map(response.results, function (json) {\n        var obj = _this._newObject(response);\n        if (obj._finishFetch) {\n          obj._finishFetch(_this._processResult(json), true);\n        }\n        return obj;\n      });\n    },\n\n\n    /**\n     * Retrieves a list of AVObjects that satisfy this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the results when\n     * the query completes.\n     */\n    find: function find(options) {\n      var request = this._createRequest(undefined, options);\n      return request.then(this._parseResponse.bind(this));\n    },\n\n\n    /**\n     * scan a Query. masterKey required.\n     *\n     * @since 2.1.0\n     * @param {object} [options]\n     * @param {string} [options.orderedBy] specify the key to sort\n     * @param {number} [options.batchSize] specify the batch size for each request\n     * @param {AuthOptions} [authOptions]\n     * @return {AsyncIterator.<AV.Object>}\n     * @example const scan = new AV.Query(TestClass).scan({\n     *   orderedBy: 'objectId',\n     *   batchSize: 10,\n     * }, {\n     *   useMasterKey: true,\n     * });\n     * const getTen = () => Promise.all(new Array(10).fill(0).map(() => scan.next()));\n     * getTen().then(results => {\n     *   // results are fisrt 10 instances of TestClass\n     *   return getTen();\n     * }).then(results => {\n     *   // 11 - 20\n     * });\n     */\n    scan: function scan() {\n      var _this2 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          orderedBy = _ref.orderedBy,\n          batchSize = _ref.batchSize;\n\n      var authOptions = arguments[1];\n\n      var condition = this.toJSON();\n      debug('scan %O', condition);\n      if (condition.order) {\n        console.warn('The order of the query is ignored for Query#scan. Checkout the orderedBy option of Query#scan.');\n        delete condition.order;\n      }\n      if (condition.skip) {\n        console.warn('The skip option of the query is ignored for Query#scan.');\n        delete condition.skip;\n      }\n      if (condition.limit) {\n        console.warn('The limit option of the query is ignored for Query#scan.');\n        delete condition.limit;\n      }\n      if (orderedBy) condition.scan_key = orderedBy;\n      if (batchSize) condition.limit = batchSize;\n      var promise = Promise.resolve([]);\n      var cursor = void 0;\n      var done = false;\n      return {\n        next: function next() {\n          promise = promise.then(function (remainResults) {\n            if (done) return [];\n            if (remainResults.length > 1) return remainResults;\n            // no cursor means we have reached the end\n            // except for the first time\n            if (!cursor && remainResults.length !== 0) {\n              done = true;\n              return remainResults;\n            }\n            // when only 1 item left in queue\n            // start the next request to see if it is the last one\n            return _request('scan/classes', _this2.className, null, 'GET', cursor ? _.extend({}, condition, { cursor: cursor }) : condition, authOptions).then(function (response) {\n              cursor = response.cursor;\n              return _this2._parseResponse(response);\n            }).then(function (results) {\n              if (!results.length) done = true;\n              return remainResults.concat(results);\n            });\n          });\n          return promise.then(function (remainResults) {\n            return remainResults.shift();\n          }).then(function (result) {\n            return {\n              value: result,\n              done: done\n            };\n          });\n        }\n      };\n    },\n\n\n    /**\n     * Delete objects retrieved by this query.\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is fulfilled when the save\n     *     completes.\n     */\n    destroyAll: function destroyAll(options) {\n      var self = this;\n      return self.find(options).then(function (objects) {\n        return AV.Object.destroyAll(objects, options);\n      });\n    },\n\n    /**\n     * Counts the number of objects that match this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the count when\n     * the query completes.\n     */\n    count: function count(options) {\n      var params = this.toJSON();\n      params.limit = 0;\n      params.count = 1;\n      var request = this._createRequest(params, options);\n\n      return request.then(function (response) {\n        return response.count;\n      });\n    },\n\n    /**\n     * Retrieves at most one AV.Object that satisfies this query.\n     *\n     * @param {AuthOptions} options\n     * @return {Promise} A promise that is resolved with the object when\n     * the query completes.\n     */\n    first: function first(options) {\n      var self = this;\n\n      var params = this.toJSON();\n      params.limit = 1;\n      var request = this._createRequest(params, options);\n\n      return request.then(function (response) {\n        return _.map(response.results, function (json) {\n          var obj = self._newObject();\n          if (obj._finishFetch) {\n            obj._finishFetch(self._processResult(json), true);\n          }\n          return obj;\n        })[0];\n      });\n    },\n\n    /**\n     * Sets the number of results to skip before returning any results.\n     * This is useful for pagination.\n     * Default is to skip zero results.\n     * @param {Number} n the number of results to skip.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    skip: function skip(n) {\n      requires(n, 'undefined is not a valid skip value');\n      this._skip = n;\n      return this;\n    },\n\n    /**\n     * Sets the limit of the number of results to return. The default limit is\n     * 100, with a maximum of 1000 results being returned at a time.\n     * @param {Number} n the number of results to limit to.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    limit: function limit(n) {\n      requires(n, 'undefined is not a valid limit value');\n      this._limit = n;\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that the AV.Object must contain.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    equalTo: function equalTo(key, value) {\n      requires(key, 'undefined is not a valid key');\n      requires(value, 'undefined is not a valid value');\n      this._where[key] = AV._encode(value);\n      return this;\n    },\n\n    /**\n     * Helper for condition queries\n     * @private\n     */\n    _addCondition: function _addCondition(key, condition, value) {\n      requires(key, 'undefined is not a valid condition key');\n      requires(condition, 'undefined is not a valid condition');\n      requires(value, 'undefined is not a valid condition value');\n\n      // Check if we already have a condition\n      if (!this._where[key]) {\n        this._where[key] = {};\n      }\n      this._where[key][condition] = AV._encode(value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular\n     * <strong>array</strong> key's length to be equal to the provided value.\n     * @param {String} key The array key to check.\n     * @param value The length value.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    sizeEqualTo: function sizeEqualTo(key, value) {\n      this._addCondition(key, '$size', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be not equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that must not be equalled.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    notEqualTo: function notEqualTo(key, value) {\n      this._addCondition(key, '$ne', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be less than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    lessThan: function lessThan(key, value) {\n      this._addCondition(key, '$lt', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be greater than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    greaterThan: function greaterThan(key, value) {\n      this._addCondition(key, '$gt', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be less than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    lessThanOrEqualTo: function lessThanOrEqualTo(key, value) {\n      this._addCondition(key, '$lte', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be greater than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    greaterThanOrEqualTo: function greaterThanOrEqualTo(key, value) {\n      this._addCondition(key, '$gte', value);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    containedIn: function containedIn(key, values) {\n      this._addCondition(key, '$in', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * not be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will not match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    notContainedIn: function notContainedIn(key, values) {\n      this._addCondition(key, '$nin', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array} values The values that will match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    containsAll: function containsAll(key, values) {\n      this._addCondition(key, '$all', values);\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding objects that contain the given key.\n     * @param {String} key The key that should exist.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    exists: function exists(key) {\n      this._addCondition(key, '$exists', true);\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding objects that do not contain a given key.\n     * @param {String} key The key that should not exist\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotExist: function doesNotExist(key) {\n      this._addCondition(key, '$exists', false);\n      return this;\n    },\n\n    /**\n     * Add a regular expression constraint for finding string values that match\n     * the provided regular expression.\n     * This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {RegExp} regex The regular expression pattern to match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matches: function matches(key, regex, modifiers) {\n      this._addCondition(key, '$regex', regex);\n      if (!modifiers) {\n        modifiers = '';\n      }\n      // Javascript regex options support mig as inline options but store them\n      // as properties of the object. We support mi & should migrate them to\n      // modifiers\n      if (regex.ignoreCase) {\n        modifiers += 'i';\n      }\n      if (regex.multiline) {\n        modifiers += 'm';\n      }\n\n      if (modifiers && modifiers.length) {\n        this._addCondition(key, '$options', modifiers);\n      }\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value matches a AV.Query\n     * constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {AV.Query} query The query that should match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matchesQuery: function matchesQuery(key, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$inQuery', queryJSON);\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value not matches a\n     * AV.Query constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {AV.Query} query The query that should not match.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotMatchQuery: function doesNotMatchQuery(key, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$notInQuery', queryJSON);\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value matches a value in\n     * an object returned by a different AV.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     matched.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {AV.Query} query The query to run.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    matchesKeyInQuery: function matchesKeyInQuery(key, queryKey, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$select', { key: queryKey, query: queryJSON });\n      return this;\n    },\n\n    /**\n     * Add a constraint that requires that a key's value not match a value in\n     * an object returned by a different AV.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     excluded.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {AV.Query} query The query to run.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    doesNotMatchKeyInQuery: function doesNotMatchKeyInQuery(key, queryKey, query) {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      this._addCondition(key, '$dontSelect', {\n        key: queryKey,\n        query: queryJSON\n      });\n      return this;\n    },\n\n    /**\n     * Add constraint that at least one of the passed in queries matches.\n     * @param {Array} queries\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     * @private\n     */\n    _orQuery: function _orQuery(queries) {\n      var queryJSON = _.map(queries, function (q) {\n        return q.toJSON().where;\n      });\n\n      this._where.$or = queryJSON;\n      return this;\n    },\n\n    /**\n     * Add constraint that both of the passed in queries matches.\n     * @param {Array} queries\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     * @private\n     */\n    _andQuery: function _andQuery(queries) {\n      var queryJSON = _.map(queries, function (q) {\n        return q.toJSON().where;\n      });\n\n      this._where.$and = queryJSON;\n      return this;\n    },\n\n    /**\n     * Converts a string into a regex that matches it.\n     * Surrounding with \\Q .. \\E does this, we just need to escape \\E's in\n     * the text separately.\n     * @private\n     */\n    _quote: function _quote(s) {\n      return '\\\\Q' + s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q') + '\\\\E';\n    },\n\n    /**\n     * Add a constraint for finding string values that contain a provided\n     * string.  This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} substring The substring that the value must contain.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    contains: function contains(key, value) {\n      this._addCondition(key, '$regex', this._quote(value));\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding string values that start with a provided\n     * string.  This query will use the backend index, so it will be fast even\n     * for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} prefix The substring that the value must start with.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    startsWith: function startsWith(key, value) {\n      this._addCondition(key, '$regex', '^' + this._quote(value));\n      return this;\n    },\n\n    /**\n     * Add a constraint for finding string values that end with a provided\n     * string.  This will be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} suffix The substring that the value must end with.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    endsWith: function endsWith(key, value) {\n      this._addCondition(key, '$regex', this._quote(value) + '$');\n      return this;\n    },\n\n    /**\n     * Sorts the results in ascending order by the given key.\n     *\n     * @param {String} key The key to order by.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    ascending: function ascending(key) {\n      requires(key, 'undefined is not a valid key');\n      this._order = key;\n      return this;\n    },\n\n    /**\n     * Also sorts the results in ascending order by the given key. The previous sort keys have\n     * precedence over this key.\n     *\n     * @param {String} key The key to order by\n     * @return {AV.Query} Returns the query so you can chain this call.\n     */\n    addAscending: function addAscending(key) {\n      requires(key, 'undefined is not a valid key');\n      if (this._order) this._order += ',' + key;else this._order = key;\n      return this;\n    },\n\n    /**\n     * Sorts the results in descending order by the given key.\n     *\n     * @param {String} key The key to order by.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    descending: function descending(key) {\n      requires(key, 'undefined is not a valid key');\n      this._order = '-' + key;\n      return this;\n    },\n\n    /**\n     * Also sorts the results in descending order by the given key. The previous sort keys have\n     * precedence over this key.\n     *\n     * @param {String} key The key to order by\n     * @return {AV.Query} Returns the query so you can chain this call.\n     */\n    addDescending: function addDescending(key) {\n      requires(key, 'undefined is not a valid key');\n      if (this._order) this._order += ',-' + key;else this._order = '-' + key;\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    near: function near(key, point) {\n      if (!(point instanceof AV.GeoPoint)) {\n        // Try to cast it to a GeoPoint, so that near(\"loc\", [20,30]) works.\n        point = new AV.GeoPoint(point);\n      }\n      this._addCondition(key, '$nearSphere', point);\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param maxDistance Maximum distance (in radians) of results to return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinRadians: function withinRadians(key, point, distance) {\n      this.near(key, point);\n      this._addCondition(key, '$maxDistance', distance);\n      return this;\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 3958.8 miles.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\n     *     return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinMiles: function withinMiles(key, point, distance) {\n      return this.withinRadians(key, point, distance / 3958.8);\n    },\n\n    /**\n     * Add a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 6371.0 kilometers.\n     * @param {String} key The key that the AV.GeoPoint is stored in.\n     * @param {AV.GeoPoint} point The reference AV.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\n     *     to return.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinKilometers: function withinKilometers(key, point, distance) {\n      return this.withinRadians(key, point, distance / 6371.0);\n    },\n\n    /**\n     * Add a constraint to the query that requires a particular key's\n     * coordinates be contained within a given rectangular geographic bounding\n     * box.\n     * @param {String} key The key to be constrained.\n     * @param {AV.GeoPoint} southwest\n     *     The lower-left inclusive corner of the box.\n     * @param {AV.GeoPoint} northeast\n     *     The upper-right inclusive corner of the box.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    withinGeoBox: function withinGeoBox(key, southwest, northeast) {\n      if (!(southwest instanceof AV.GeoPoint)) {\n        southwest = new AV.GeoPoint(southwest);\n      }\n      if (!(northeast instanceof AV.GeoPoint)) {\n        northeast = new AV.GeoPoint(northeast);\n      }\n      this._addCondition(key, '$within', { $box: [southwest, northeast] });\n      return this;\n    },\n\n    /**\n     * Include nested AV.Objects for the provided key.  You can use dot\n     * notation to specify which fields in the included object are also fetch.\n     * @param {String[]} keys The name of the key to include.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    include: function include(keys) {\n      var _this3 = this;\n\n      requires(keys, 'undefined is not a valid key');\n      _(arguments).forEach(function (keys) {\n        _this3._include = _this3._include.concat(ensureArray(keys));\n      });\n      return this;\n    },\n\n    /**\n     * Include the ACL.\n     * @param {Boolean} [value=true] Whether to include the ACL\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    includeACL: function includeACL() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._includeACL = value;\n      return this;\n    },\n\n    /**\n     * Restrict the fields of the returned AV.Objects to include only the\n     * provided keys.  If this is called multiple times, then all of the keys\n     * specified in each of the calls will be included.\n     * @param {String[]} keys The names of the keys to include.\n     * @return {AV.Query} Returns the query, so you can chain this call.\n     */\n    select: function select(keys) {\n      var _this4 = this;\n\n      requires(keys, 'undefined is not a valid key');\n      _(arguments).forEach(function (keys) {\n        _this4._select = _this4._select.concat(ensureArray(keys));\n      });\n      return this;\n    },\n\n    /**\n     * Iterates over each result of a query, calling a callback for each one. If\n     * the callback returns a promise, the iteration will not continue until\n     * that promise has been fulfilled. If the callback returns a rejected\n     * promise, then iteration will stop with that error. The items are\n     * processed in an unspecified order. The query may not have any sort order,\n     * and may not use limit or skip.\n     * @param callback {Function} Callback that will be called with each result\n     *     of the query.\n     * @return {Promise} A promise that will be fulfilled once the\n     *     iteration has completed.\n     */\n    each: function each(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this._order || this._skip || this._limit >= 0) {\n        var error = new Error('Cannot iterate on a query with sort, skip, or limit.');\n        return Promise.reject(error);\n      }\n\n      var query = new AV.Query(this.objectClass);\n      // We can override the batch size from the options.\n      // This is undocumented, but useful for testing.\n      query._limit = options.batchSize || 100;\n      query._where = _.clone(this._where);\n      query._include = _.clone(this._include);\n\n      query.ascending('objectId');\n\n      var finished = false;\n      return Promise._continueWhile(function () {\n        return !finished;\n      }, function () {\n        return query.find(options).then(function (results) {\n          var callbacksDone = Promise.resolve();\n          _.each(results, function (result) {\n            callbacksDone = callbacksDone.then(function () {\n              return callback(result);\n            });\n          });\n\n          return callbacksDone.then(function () {\n            if (results.length >= query._limit) {\n              query.greaterThan('objectId', results[results.length - 1].id);\n            } else {\n              finished = true;\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Subscribe the changes of this query.\n     *\n     * LiveQuery is not included in the default bundle: {@link https://url.leanapp.cn/enable-live-query}.\n     *\n     * @since 3.0.0\n     * @return {AV.LiveQuery} An eventemitter which can be used to get LiveQuery updates;\n     */\n    subscribe: function subscribe(options) {\n      return AV.LiveQuery.init(this, options);\n    }\n  });\n\n  AV.FriendShipQuery = AV.Query._extend({\n    _objectClass: AV.User,\n    _newObject: function _newObject() {\n      return new AV.User();\n    },\n    _processResult: function _processResult(json) {\n      if (json && json[this._friendshipTag]) {\n        var user = json[this._friendshipTag];\n        if (user.__type === 'Pointer' && user.className === '_User') {\n          delete user.__type;\n          delete user.className;\n        }\n        return user;\n      } else {\n        return null;\n      }\n    }\n  });\n};"},"lineCount":1076}},"hash":"d02133e51ba4dc3b8a5931c3af619965","cacheData":{"env":{}}}