{"id":"node_modules/leancloud-storage/dist/node/uploader/cos.js","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\package.json","includedInParent":true,"mtime":1542805068504},{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\package.json","includedInParent":true,"mtime":1542804871007},{"name":"superagent","loc":{"line":3,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\uploader\\cos.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\superagent\\lib\\node\\index.js"},{"name":"debug","loc":{"line":4,"column":20},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\uploader\\cos.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\node_modules\\debug\\src\\browser.js"},{"name":"../promise","loc":{"line":5,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\uploader\\cos.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\promise.js"}],"generated":{"js":"'use strict';\n\nvar request = require('superagent');\nvar debug = require('debug')('cos');\nvar Promise = require('../promise');\n\nmodule.exports = function upload(uploadInfo, data, file) {\n  var saveOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  file.attributes.url = uploadInfo.url;\n  file._bucket = uploadInfo.bucket;\n  file.id = uploadInfo.objectId;\n  var uploadUrl = uploadInfo.upload_url + '?sign=' + encodeURIComponent(uploadInfo.token);\n\n  return new Promise(function (resolve, reject) {\n    var req = request('POST', uploadUrl).set(file._uploadHeaders).attach('fileContent', data, file.attributes.name).field('op', 'upload');\n    if (saveOptions.onprogress) {\n      req.on('progress', saveOptions.onprogress);\n    }\n    req.end(function (err, res) {\n      if (res) {\n        debug(res.status, res.body, res.text);\n      }\n      if (err) {\n        if (res) {\n          err.statusCode = res.status;\n          err.responseText = res.text;\n          err.response = res.body;\n        }\n        return reject(err);\n      }\n      resolve(file);\n    });\n  });\n};","map":{"mappings":[{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/uploader/cos.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/leancloud-storage/dist/node/uploader/cos.js":"'use strict';\n\nvar request = require('superagent');\nvar debug = require('debug')('cos');\nvar Promise = require('../promise');\n\nmodule.exports = function upload(uploadInfo, data, file) {\n  var saveOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  file.attributes.url = uploadInfo.url;\n  file._bucket = uploadInfo.bucket;\n  file.id = uploadInfo.objectId;\n  var uploadUrl = uploadInfo.upload_url + '?sign=' + encodeURIComponent(uploadInfo.token);\n\n  return new Promise(function (resolve, reject) {\n    var req = request('POST', uploadUrl).set(file._uploadHeaders).attach('fileContent', data, file.attributes.name).field('op', 'upload');\n    if (saveOptions.onprogress) {\n      req.on('progress', saveOptions.onprogress);\n    }\n    req.end(function (err, res) {\n      if (res) {\n        debug(res.status, res.body, res.text);\n      }\n      if (err) {\n        if (res) {\n          err.statusCode = res.status;\n          err.responseText = res.text;\n          err.response = res.body;\n        }\n        return reject(err);\n      }\n      resolve(file);\n    });\n  });\n};"},"lineCount":35}},"hash":"2367abb3bfea4af429879ab39e345503","cacheData":{"env":{}}}