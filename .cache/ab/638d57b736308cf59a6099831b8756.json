{"id":"node_modules/leancloud-storage/dist/node/role.js","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\package.json","includedInParent":true,"mtime":1542805068504},{"name":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\package.json","includedInParent":true,"mtime":1542804871007},{"name":"underscore","loc":{"line":3,"column":16},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\role.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\underscore\\underscore.js"},{"name":"./error","loc":{"line":4,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\role.js","resolved":"C:\\Users\\Administrator\\Desktop\\resume-jq-master\\node_modules\\leancloud-storage\\dist\\node\\error.js"}],"generated":{"js":"'use strict';\n\nvar _ = require('underscore');\nvar AVError = require('./error');\n\nmodule.exports = function (AV) {\n  AV.Role = AV.Object.extend('_Role',\n  /** @lends AV.Role.prototype */{\n    // Instance Methods\n\n    /**\n     * Represents a Role on the AV server. Roles represent groupings of\n     * Users for the purposes of granting permissions (e.g. specifying an ACL\n     * for an Object). Roles are specified by their sets of child users and\n     * child roles, all of which are granted any permissions that the parent\n     * role has.\n     *\n     * <p>Roles must have a name (which cannot be changed after creation of the\n     * role), and must specify an ACL.</p>\n     * An AV.Role is a local representation of a role persisted to the AV\n     * cloud.\n     * @class AV.Role\n     * @param {String} name The name of the Role to create.\n     * @param {AV.ACL} acl The ACL for this role.\n     */\n    constructor: function constructor(name, acl) {\n      if (_.isString(name)) {\n        AV.Object.prototype.constructor.call(this, null, null);\n        this.setName(name);\n      } else {\n        AV.Object.prototype.constructor.call(this, name, acl);\n      }\n      if (acl) {\n        if (!(acl instanceof AV.ACL)) {\n          throw new TypeError('acl must be an instance of AV.ACL');\n        } else {\n          this.setACL(acl);\n        }\n      }\n    },\n\n    /**\n     * Gets the name of the role.  You can alternatively call role.get(\"name\")\n     *\n     * @return {String} the name of the role.\n     */\n    getName: function getName() {\n      return this.get('name');\n    },\n\n    /**\n     * Sets the name for a role. This value must be set before the role has\n     * been saved to the server, and cannot be set once the role has been\n     * saved.\n     *\n     * <p>\n     *   A role's name can only contain alphanumeric characters, _, -, and\n     *   spaces.\n     * </p>\n     *\n     * <p>This is equivalent to calling role.set(\"name\", name)</p>\n     *\n     * @param {String} name The name of the role.\n     */\n    setName: function setName(name, options) {\n      return this.set('name', name, options);\n    },\n\n    /**\n     * Gets the AV.Relation for the AV.Users that are direct\n     * children of this role. These users are granted any privileges that this\n     * role has been granted (e.g. read or write access through ACLs). You can\n     * add or remove users from the role through this relation.\n     *\n     * <p>This is equivalent to calling role.relation(\"users\")</p>\n     *\n     * @return {AV.Relation} the relation for the users belonging to this\n     *     role.\n     */\n    getUsers: function getUsers() {\n      return this.relation('users');\n    },\n\n    /**\n     * Gets the AV.Relation for the AV.Roles that are direct\n     * children of this role. These roles' users are granted any privileges that\n     * this role has been granted (e.g. read or write access through ACLs). You\n     * can add or remove child roles from this role through this relation.\n     *\n     * <p>This is equivalent to calling role.relation(\"roles\")</p>\n     *\n     * @return {AV.Relation} the relation for the roles belonging to this\n     *     role.\n     */\n    getRoles: function getRoles() {\n      return this.relation('roles');\n    },\n\n    /**\n     * @ignore\n     */\n    validate: function validate(attrs, options) {\n      if ('name' in attrs && attrs.name !== this.getName()) {\n        var newName = attrs.name;\n        if (this.id && this.id !== attrs.objectId) {\n          // Check to see if the objectId being set matches this.id.\n          // This happens during a fetch -- the id is set before calling fetch.\n          // Let the name be set in this case.\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name can only be set before it has been saved.\");\n        }\n        if (!_.isString(newName)) {\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name must be a String.\");\n        }\n        if (!/^[0-9a-zA-Z\\-_ ]+$/.test(newName)) {\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name can only contain alphanumeric characters, _,\" + ' -, and spaces.');\n        }\n      }\n      if (AV.Object.prototype.validate) {\n        return AV.Object.prototype.validate.call(this, attrs, options);\n      }\n      return false;\n    }\n  });\n};","map":{"mappings":[{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/leancloud-storage/dist/node/role.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}}],"sources":{"node_modules/leancloud-storage/dist/node/role.js":"'use strict';\n\nvar _ = require('underscore');\nvar AVError = require('./error');\n\nmodule.exports = function (AV) {\n  AV.Role = AV.Object.extend('_Role',\n  /** @lends AV.Role.prototype */{\n    // Instance Methods\n\n    /**\n     * Represents a Role on the AV server. Roles represent groupings of\n     * Users for the purposes of granting permissions (e.g. specifying an ACL\n     * for an Object). Roles are specified by their sets of child users and\n     * child roles, all of which are granted any permissions that the parent\n     * role has.\n     *\n     * <p>Roles must have a name (which cannot be changed after creation of the\n     * role), and must specify an ACL.</p>\n     * An AV.Role is a local representation of a role persisted to the AV\n     * cloud.\n     * @class AV.Role\n     * @param {String} name The name of the Role to create.\n     * @param {AV.ACL} acl The ACL for this role.\n     */\n    constructor: function constructor(name, acl) {\n      if (_.isString(name)) {\n        AV.Object.prototype.constructor.call(this, null, null);\n        this.setName(name);\n      } else {\n        AV.Object.prototype.constructor.call(this, name, acl);\n      }\n      if (acl) {\n        if (!(acl instanceof AV.ACL)) {\n          throw new TypeError('acl must be an instance of AV.ACL');\n        } else {\n          this.setACL(acl);\n        }\n      }\n    },\n\n    /**\n     * Gets the name of the role.  You can alternatively call role.get(\"name\")\n     *\n     * @return {String} the name of the role.\n     */\n    getName: function getName() {\n      return this.get('name');\n    },\n\n    /**\n     * Sets the name for a role. This value must be set before the role has\n     * been saved to the server, and cannot be set once the role has been\n     * saved.\n     *\n     * <p>\n     *   A role's name can only contain alphanumeric characters, _, -, and\n     *   spaces.\n     * </p>\n     *\n     * <p>This is equivalent to calling role.set(\"name\", name)</p>\n     *\n     * @param {String} name The name of the role.\n     */\n    setName: function setName(name, options) {\n      return this.set('name', name, options);\n    },\n\n    /**\n     * Gets the AV.Relation for the AV.Users that are direct\n     * children of this role. These users are granted any privileges that this\n     * role has been granted (e.g. read or write access through ACLs). You can\n     * add or remove users from the role through this relation.\n     *\n     * <p>This is equivalent to calling role.relation(\"users\")</p>\n     *\n     * @return {AV.Relation} the relation for the users belonging to this\n     *     role.\n     */\n    getUsers: function getUsers() {\n      return this.relation('users');\n    },\n\n    /**\n     * Gets the AV.Relation for the AV.Roles that are direct\n     * children of this role. These roles' users are granted any privileges that\n     * this role has been granted (e.g. read or write access through ACLs). You\n     * can add or remove child roles from this role through this relation.\n     *\n     * <p>This is equivalent to calling role.relation(\"roles\")</p>\n     *\n     * @return {AV.Relation} the relation for the roles belonging to this\n     *     role.\n     */\n    getRoles: function getRoles() {\n      return this.relation('roles');\n    },\n\n    /**\n     * @ignore\n     */\n    validate: function validate(attrs, options) {\n      if ('name' in attrs && attrs.name !== this.getName()) {\n        var newName = attrs.name;\n        if (this.id && this.id !== attrs.objectId) {\n          // Check to see if the objectId being set matches this.id.\n          // This happens during a fetch -- the id is set before calling fetch.\n          // Let the name be set in this case.\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name can only be set before it has been saved.\");\n        }\n        if (!_.isString(newName)) {\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name must be a String.\");\n        }\n        if (!/^[0-9a-zA-Z\\-_ ]+$/.test(newName)) {\n          return new AVError(AVError.OTHER_CAUSE, \"A role's name can only contain alphanumeric characters, _,\" + ' -, and spaces.');\n        }\n      }\n      if (AV.Object.prototype.validate) {\n        return AV.Object.prototype.validate.call(this, attrs, options);\n      }\n      return false;\n    }\n  });\n};"},"lineCount":124}},"hash":"cebed815b8a298511ec6bbdb2e9475c2","cacheData":{"env":{}}}